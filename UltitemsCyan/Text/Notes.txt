

 ! ! ! Important ! ! !

Util.CheckRoll() ranges from 0f to 100f
activeBuffsList has a length equal to all buffs in the game mostly filled with garbage data, use activeBuffsListCount to get effective length

The order that the items are initialized matters in how the hooks are ordered

	Healthcomponent
health = Current: Hp + Shield + Barrier
fullHealth = Max: Hp
fullBarrier = Max: Hp + Shield
fullCombinedHealth = Max: Hp + Shield
CombinedHealthFraction = Current: Hp + Shield + Barrier / Hp + Shield

	Other notes

Item Behavior Order:
Adding -> OnAwake(), OnEnable(), Start()
Removing -> OnDisable(), Destory()

ChatMessageBase.GetObjectName(GameObject)
To get name of objects, returns player username or object name

if (NetworkServer.active)
To make sure the code only runs on the server side

Use PickupDropletController.CreatePickupDroplet(pickupIndex, transform.position, transform.forward * 20f); for spawning items (like from chest)

//skill.skillDef.canceledFromSprinting = true;

CharacterBody.radius indicates how close enemies need to get to attack you, when inside they do nothing

For detecting standing still, you need to add an item behavior
self.AddItemBehavior<OrichalcumItemBehavior>(self.inventory.GetItemCount(item.itemIndex));

Kill Self
self.healthComponent.Suicide();

Get the last item picked up
self.itemAcquisitionOrder.Last<ItemIndex>();

PurchaseInteraction for chest purchase prices

Run.tierXDropList to get all items which can be dropped from a chest from a tier

	Other Mods
MultiplayerModTesting
In Console:
connect localhost:7777

DebugToolkit
Ctrl + Alt + ~ : Open Console
__Useful_Commands__
give_item

no_enemies
buddha
kill_all monster

remove_all_items 

teleport_on_cursor 
respawn 



All RTCP strings?
"playerHealth"
"enemyValue"
"teleporterProximity"
"teleporterDirection"
"teleporterPlayerStatus"
"Music_system"
"gameplaySongChoice"
"Music_menu"
"bossStatus"
"eliteEnemy"
"damageDirection"



Paired and broken items from ither mods
{ "RegeneratingScrapConsumed", "RegeneratingScrap" }, // Vanilla
{ "HealingPotionConsumed", "HealingPotion" },
{ "FragileDamagebonusConsumed", "FragileDamageBonus" },
{ "ExtraLifeConsumed", "ExtraLife" },
{ "ExtraLifeVoidConsumed", "ExtraLifeVoid" },
{ "FourHundredTicketsConsumed", "FourHundredTickets" }, // Hex3Mod
{ "OneTicketConsumed", "OneTicket" },
{ "TreasureCacheConsumed", "TreasureCache" }, // WolfoQOL
{ "TreasureCacheVoidConsumed", "TreasureCacheVoid" },
{ "MysticsItems_KeepShopTerminalOpenConsumed", "MysticsItems_KeepShopTerminalOpen" }, // MysticsItems
{ "MysticsItems_LimitedArmorBroken", "MysticsItems_LimitedArmor" },
{ "MysticsItems_GhostAppleWeak", "MysticsItems_GhostApple" },
{ "ITEM_BROKEN_MESS", "ITEM_CLOCKWORK_ITEM" }, // VanillaVoid
{ "ITEM_EMPTY_VIALS", "ITEM_EHANCE_VIALS_ITEM" },
{ "HCFB_ITEM_BROKEN_CHOPSTICKS", "HCFB_ITEM_CHOPSTICKS" }, // Fork Is Back
{ "ITEM_SINGULARITYCONSUMED", "ITEM_SINGULARITY" }, // Spikestrip
{ "ITEM_CARTRIDGECONSUMED", "ITEM_AbyssalMedkit" }